"use strict";exports.id=7947,exports.ids=[7947],exports.modules={47947:(a,b,c)=>{c.d(b,{getAuthenticationCore:()=>x});var d=c(94735);class e extends d.EventEmitter{constructor(a){super(),this._isLoaded=!1,this._isActive=!1,this._isConfigured=!1,this._configuration={},this.manifest=a,this._lastActivity=new Date,this._startTime=new Date,this._metrics={requestCount:0,errorCount:0,avgResponseTime:0,memoryUsage:0,customMetrics:{}},this._healthStatus={status:"unknown",lastCheck:new Date,issues:[],uptime:0},this._configuration={...this.manifest.configuration.defaults}}get isLoaded(){return this._isLoaded}get isActive(){return this._isActive}get isConfigured(){return this._isConfigured}get lastError(){return this._lastError}async configure(a){try{let b=this.validateConfiguration(a);if(!b.isValid)throw Error(`Configuration validation failed: ${b.errors.map(a=>a.message).join(", ")}`);this._configuration={...this._configuration,...a},await this.applyConfiguration(this._configuration),this._isConfigured=!0,this.updateActivity(),this.emit("configured",{configuration:this._configuration})}catch(a){throw this._lastError=a instanceof Error?a:Error(String(a)),this.emit("configuration-error",a),a}}getConfiguration(){return{...this._configuration}}validateConfiguration(a){let b=[],c=[];for(let c of this.manifest.configuration.required)c in a||b.push({field:c,message:`Required field '${c}' is missing`,code:"REQUIRED_FIELD_MISSING"});for(let[d,e]of Object.entries(this.manifest.configuration.schema))if(d in a){let f=a[d],g=this.validateField(d,f,e);b.push(...g.errors),c.push(...g.warnings||[])}let d=this.customConfigurationValidation(a);return b.push(...d.errors),c.push(...d.warnings||[]),{isValid:0===b.length,errors:b,warnings:c}}async initialize(){try{this.emit("initializing"),await this.onInitialize(),this._isLoaded=!0,this.updateActivity(),this.updateHealthStatus(),this.emit("initialized")}catch(a){throw this._lastError=a instanceof Error?a:Error(String(a)),this.emit("initialization-error",a),a}}async activate(){try{if(!this._isLoaded)throw Error("Module must be initialized before activation");this.emit("activating"),await this.onActivate(),this._isActive=!0,this.updateActivity(),this.updateHealthStatus(),this.emit("activated")}catch(a){throw this._lastError=a instanceof Error?a:Error(String(a)),this.emit("activation-error",a),a}}async deactivate(){try{if(!this._isActive)return;this.emit("deactivating"),await this.onDeactivate(),this._isActive=!1,this.updateActivity(),this.updateHealthStatus(),this.emit("deactivated")}catch(a){throw this._lastError=a instanceof Error?a:Error(String(a)),this.emit("deactivation-error",a),a}}async cleanup(){try{this.emit("cleaning-up"),this._isActive&&await this.deactivate(),await this.onCleanup(),this._isLoaded=!1,this._isConfigured=!1,this.updateActivity(),this.emit("cleaned-up")}catch(a){throw this._lastError=a instanceof Error?a:Error(String(a)),this.emit("cleanup-error",a),a}}getCapabilities(){return[...this.manifest.provides]}hasCapability(a,b){let c=this.manifest.provides.find(b=>b.name===a);return!!c&&(!b||this.isVersionCompatible(c.version,b))}getCapabilityInterface(a){if(!this.manifest.provides.find(b=>b.name===a))throw Error(`Capability '${a}' not provided by this module`);if(!this._isActive)throw Error(`Module must be active to access capability '${a}'`);return this.getCapabilityImplementation(a)}getHealthStatus(){return this.updateHealthStatus(),{...this._healthStatus}}getMetrics(){return this.updateMetrics(),{...this._metrics}}getLastActivity(){return new Date(this._lastActivity)}customConfigurationValidation(a){return{isValid:!0,errors:[]}}updateCustomMetrics(){return{}}performHealthCheck(){return[]}recordRequest(a){this._metrics.requestCount++;let b=this._metrics.avgResponseTime*(this._metrics.requestCount-1)+a;this._metrics.avgResponseTime=b/this._metrics.requestCount,this.updateActivity()}recordError(a){this._metrics.errorCount++,this._lastError=a,this.updateActivity(),this._healthStatus.issues.push({severity:"medium",message:a.message,code:"MODULE_ERROR",timestamp:new Date,resolved:!1}),this.emit("error",a)}logActivity(a,b){this.updateActivity(),this.emit("activity",{message:a,data:b,timestamp:new Date})}updateActivity(){this._lastActivity=new Date}updateMetrics(){"undefined"!=typeof process&&process.memoryUsage&&(this._metrics.memoryUsage=process.memoryUsage().heapUsed),this._metrics.customMetrics=this.updateCustomMetrics()}updateHealthStatus(){let a=new Date;this._healthStatus.uptime=a.getTime()-this._startTime.getTime(),this._healthStatus.lastCheck=a;let b=this.performHealthCheck();this._healthStatus.issues.push(...b);let c=this._healthStatus.issues.filter(a=>"critical"===a.severity&&!a.resolved),d=this._healthStatus.issues.filter(a=>"high"===a.severity&&!a.resolved);c.length>0?this._healthStatus.status="unhealthy":d.length>0?this._healthStatus.status="degraded":this._isActive&&this._isLoaded?this._healthStatus.status="healthy":this._healthStatus.status="unknown";let e=new Date(a.getTime()-864e5);this._healthStatus.issues=this._healthStatus.issues.filter(a=>!a.resolved||a.timestamp>e)}validateField(a,b,c){let d=[];return"string"===c.type&&"string"!=typeof b?d.push({field:a,message:`Field '${a}' must be a string`,code:"INVALID_TYPE",value:b}):"number"===c.type&&"number"!=typeof b?d.push({field:a,message:`Field '${a}' must be a number`,code:"INVALID_TYPE",value:b}):"boolean"===c.type&&"boolean"!=typeof b&&d.push({field:a,message:`Field '${a}' must be a boolean`,code:"INVALID_TYPE",value:b}),c.enum&&!c.enum.includes(b)&&d.push({field:a,message:`Field '${a}' must be one of: ${c.enum.join(", ")}`,code:"INVALID_ENUM_VALUE",value:b}),{isValid:0===d.length,errors:d,warnings:[]}}isVersionCompatible(a,b){let c=a.split(".").map(Number),d=b.split(".").map(Number);return c[0]===d[0]}}var f=c(66143);let g={UPLOAD_DOCUMENTS:"upload_documents",VIEW_ALL_DOCUMENTS:"view_all_documents",DELETE_DOCUMENTS:"delete_documents",VIEW_COMPLIANCE_REPORTS:"view_compliance_reports",GENERATE_REPORTS:"generate_reports",ACKNOWLEDGE_ALERTS:"acknowledge_alerts",INVITE_USERS:"invite_users",MANAGE_USER_ROLES:"manage_user_roles",REMOVE_USERS:"remove_users",MANAGE_SUPPLIERS:"manage_suppliers",MANAGE_SETTINGS:"manage_settings",VIEW_AUDIT_LOGS:"view_audit_logs",MANAGE_BILLING:"manage_billing",EXPORT_DATA:"export_data",GRANT_INSPECTOR_ACCESS:"grant_inspector_access"},h=async()=>{let{data:{user:a},error:b}=await f.supabase.auth.getUser();return b||!a?null:a},i=async()=>{let a=await h();if(!a)return null;let{data:b,error:c}=await f.supabase.from("profiles").select(`
      *,
      client_users (
        *,
        clients (*)
      )
    `).eq("id",a.id).single();return c?(console.error("Error fetching user profile:",c),null):b},j=async()=>!!await h(),k=async a=>{let b=await h();return b?await (0,f.tB)(b.id,a):null},l=async(a,b)=>{let c=await k(a);return!!c&&m(c,b)},m=(a,b)=>{let c={staff:1,manager:2,admin:3,owner:4};return c[a]>=c[b]},n=a=>({staff:[g.UPLOAD_DOCUMENTS],manager:[g.UPLOAD_DOCUMENTS,g.VIEW_ALL_DOCUMENTS,g.VIEW_COMPLIANCE_REPORTS,g.ACKNOWLEDGE_ALERTS,g.MANAGE_SUPPLIERS],admin:[g.UPLOAD_DOCUMENTS,g.VIEW_ALL_DOCUMENTS,g.DELETE_DOCUMENTS,g.VIEW_COMPLIANCE_REPORTS,g.GENERATE_REPORTS,g.ACKNOWLEDGE_ALERTS,g.INVITE_USERS,g.MANAGE_USER_ROLES,g.MANAGE_SUPPLIERS,g.MANAGE_SETTINGS,g.VIEW_AUDIT_LOGS,g.EXPORT_DATA,g.GRANT_INSPECTOR_ACCESS],owner:[g.UPLOAD_DOCUMENTS,g.VIEW_ALL_DOCUMENTS,g.DELETE_DOCUMENTS,g.VIEW_COMPLIANCE_REPORTS,g.GENERATE_REPORTS,g.ACKNOWLEDGE_ALERTS,g.INVITE_USERS,g.MANAGE_USER_ROLES,g.REMOVE_USERS,g.MANAGE_SUPPLIERS,g.MANAGE_SETTINGS,g.VIEW_AUDIT_LOGS,g.MANAGE_BILLING,g.EXPORT_DATA,g.GRANT_INSPECTOR_ACCESS]})[a]||[],o=async(a,b)=>{let c=await k(a);return!!c&&n(c).includes(b)},p=async(a,b)=>{let{data:c,error:d}=await f.supabase.auth.signInWithPassword({email:a,password:b});if(d)throw Error(d.message);return c},q=async(a,b,c)=>{let{data:d,error:e}=await f.supabase.auth.signUp({email:a,password:b,options:{data:{invitation_token:c}}});if(e)throw Error(e.message);return d},r=async()=>{let{error:a}=await f.supabase.auth.signOut();if(a)throw Error(a.message)},s=async(a,b,c)=>{let{data:d,error:e}=await f.supabase.from("profiles").insert({id:a,email:b,full_name:c}).select().single();if(e)throw Error(`Failed to create profile: ${e.message}`);return d},t=async a=>{let b=await h();if(!b)throw Error("No authenticated user");let{data:c,error:d}=await f.supabase.from("profiles").update(a).eq("id",b.id).select().single();if(d)throw Error(`Failed to update profile: ${d.message}`);return c},u=async(a,b)=>{let{data:c,error:d}=await f.supabase.from("invitations").select("*, clients(*)").eq("token",a).eq("status","pending").gt("expires_at",new Date().toISOString()).single();if(d||!c)throw Error("Invalid or expired invitation");let{data:e,error:g}=await f.supabase.auth.signUp({email:c.email,password:b});if(g||!e.user)throw Error(`Signup failed: ${g?.message}`);await s(e.user.id,c.email);let{error:h}=await f.supabase.from("client_users").insert({user_id:e.user.id,client_id:c.client_id,role:c.role,status:"active",invited_by:c.invited_by,invited_at:c.created_at,joined_at:new Date().toISOString()});if(h)throw Error(`Failed to create team membership: ${h.message}`);return await f.supabase.from("invitations").update({status:"accepted"}).eq("id",c.id),{user:e.user,client:c.clients,role:c.role}};class v extends e{constructor(){let a={sessionTimeout:36e5,refreshTokenLifetime:2592e6,enableSessionRefresh:!0,passwordMinLength:8,passwordRequireUppercase:!0,passwordRequireLowercase:!0,passwordRequireNumbers:!0,passwordRequireSpecialChars:!1,passwordMaxAttempts:5,passwordLockoutDuration:9e5,enableMultipleClients:!0,defaultClientSelection:"first",enableClientSwitching:!0,invitationExpiryHours:72,enableSelfRegistration:!1,requireEmailVerification:!0,enableRememberMe:!0,rememberMeDuration:2592e6,enableIPWhitelisting:!1,enableDeviceTracking:!1,enableAuditLogging:!0,auditRetentionDays:90};super({name:"@jigr/authentication-core",version:"1.0.0",description:"Core authentication and authorization module for JiGR Suite",provides:[{name:"authentication",version:"1.0.0",description:"User authentication and session management",interface:"auth-interface"},{name:"authorization",version:"1.0.0",description:"Role-based access control and permissions",interface:"auth-interface"},{name:"profile-management",version:"1.0.0",description:"User profile and account management",interface:"auth-interface"},{name:"team-management",version:"1.0.0",description:"Team invitations and member management",interface:"auth-interface"}],requires:[{name:"@jigr/database-core",version:"^1.0.0",description:"Database abstraction layer",interface:"auth-interface"}],configuration:{required:["sessionTimeout","passwordMinLength"],defaults:a,schema:{sessionTimeout:{type:"number",description:"Session timeout in milliseconds"},passwordMinLength:{type:"number",description:"Minimum password length"},enableMultipleClients:{type:"boolean",description:"Enable multi-tenant client support"},invitationExpiryHours:{type:"number",description:"Invitation expiry time in hours"}}}}),this.config=a}async onInitialize(){this.logActivity("Initializing Authentication Core module");try{await j(),this.logActivity("Authentication system connectivity verified")}catch(a){throw this.recordError(a instanceof Error?a:Error("Authentication system unavailable")),a}}async onActivate(){this.logActivity("Activating Authentication Core module"),this.setupEventListeners(),this.logActivity("Authentication Core module activated successfully")}async onDeactivate(){this.logActivity("Deactivating Authentication Core module"),this.removeAllListeners(),this.logActivity("Authentication Core module deactivated")}async onCleanup(){this.logActivity("Cleaning up Authentication Core module"),this.logActivity("Authentication Core module cleanup completed")}async applyConfiguration(a){this.config={...this.config,...a},this.logActivity("Authentication configuration updated",{config:this.config})}getCapabilityImplementation(a){switch(a){case"authentication":return this.getAuthenticationCapability();case"authorization":return this.getAuthorizationCapability();case"profile-management":return this.getProfileManagementCapability();case"team-management":return this.getTeamManagementCapability();default:throw Error(`Unknown capability: ${a}`)}}getAuthenticationCapability(){return{signIn:async(a,b,c={})=>{let d=Date.now();try{let c=await p(a,b),e={success:!0,user:c.user};return this.recordRequest(Date.now()-d),this.emit("user:signed-in",{user:c.user}),e}catch(a){return this.recordError(a instanceof Error?a:Error("Sign in failed")),{success:!1,error:a instanceof Error?a.message:"Sign in failed"}}},signOut:async a=>{try{await r(),this.emit("user:signed-out",{userId:a||"current"})}catch(a){throw this.recordError(a instanceof Error?a:Error("Sign out failed")),a}},signUp:async(a,b,c)=>{let d=Date.now();try{let e=await q(a,b,c);return this.recordRequest(Date.now()-d),{success:!0,user:e.user,requiresVerification:!e.session}}catch(a){return this.recordError(a instanceof Error?a:Error("Sign up failed")),{success:!1,error:a instanceof Error?a.message:"Sign up failed"}}},getCurrentUser:h,getCurrentUserProfile:i,refreshSession:async()=>!0,isAuthenticated:j}}getAuthorizationCapability(){return{hasPermission:async(a,b,c)=>{try{return await o(b,c)}catch(a){return this.recordError(a instanceof Error?a:Error("Permission check failed")),!1}},hasRoleOrHigher:async(a,b,c)=>{try{return await l(b,c)}catch(a){return this.recordError(a instanceof Error?a:Error("Role check failed")),!1}},getRolePermissions:n,assignUserRole:async(a,b,c,d)=>{try{return this.emit("user:role-changed",{userId:a,clientId:b,newRole:c,oldRole:"staff"}),!0}catch(a){return this.recordError(a instanceof Error?a:Error("Role assignment failed")),!1}},removeUserRole:async(a,b,c)=>{try{return this.emit("team:user-removed",{userId:a,clientId:b,removedBy:c}),!0}catch(a){return this.recordError(a instanceof Error?a:Error("Role removal failed")),!1}},grantClientAccess:async(a,b,c,d)=>{try{return this.emit("client:accessed",{userId:a,clientId:b}),!0}catch(a){return this.recordError(a instanceof Error?a:Error("Client access grant failed")),!1}},revokeClientAccess:async(a,b,c)=>{try{return this.emit("client:access-denied",{userId:a,clientId:b,reason:"Access revoked"}),!0}catch(a){return this.recordError(a instanceof Error?a:Error("Client access revocation failed")),!1}}}}getProfileManagementCapability(){return{createUserProfile:async(a,b,c)=>{try{let d=await s(a,b,c);return{id:d.id,email:d.email,full_name:d.full_name,phone:d.phone,avatar_url:d.avatar_url,clients:[],created_at:d.created_at}}catch(a){throw this.recordError(a instanceof Error?a:Error("Profile creation failed")),a}},updateUserProfile:async(a,b)=>{try{let c=await t(b);return this.emit("user:profile-updated",{userId:a,changes:b}),{id:c.id,email:c.email,full_name:c.full_name,phone:c.phone,avatar_url:c.avatar_url,clients:[],created_at:c.created_at}}catch(a){throw this.recordError(a instanceof Error?a:Error("Profile update failed")),a}},getUserProfile:async a=>{try{let a=await i();if(!a)return null;return{id:a.id,email:a.email,full_name:a.full_name,phone:a.phone,avatar_url:a.avatar_url,clients:[],created_at:a.created_at}}catch(a){return this.recordError(a instanceof Error?a:Error("Profile fetch failed")),null}},deleteUserProfile:async(a,b)=>{try{return!0}catch(a){return this.recordError(a instanceof Error?a:Error("Profile deletion failed")),!1}},updateAvatar:async(a,b)=>{try{return"avatar-url"}catch(a){throw this.recordError(a instanceof Error?a:Error("Avatar update failed")),a}},removeAvatar:async a=>{}}}getTeamManagementCapability(){return{createInvitation:async(a,b,c,d)=>{try{return this.emit("team:user-invited",{email:a,clientId:b,role:c,invitedBy:d}),{id:"invitation-id",email:a,role:c,token:"invitation-token",status:"pending",client_id:b,invited_by:d,expires_at:new Date(Date.now()+60*this.config.invitationExpiryHours*6e4).toISOString(),created_at:new Date().toISOString()}}catch(a){throw this.recordError(a instanceof Error?a:Error("Invitation creation failed")),a}},acceptInvitation:async(a,b)=>{try{let c=await u(a,b);return this.emit("team:invitation-accepted",{userId:c.user.id,clientId:c.client.id,role:c.role}),{success:!0,user:c.user,client:c.client,role:c.role}}catch(a){return this.recordError(a instanceof Error?a:Error("Invitation acceptance failed")),{success:!1,error:a instanceof Error?a.message:"Invitation acceptance failed"}}},cancelInvitation:async(a,b)=>{try{return!0}catch(a){return this.recordError(a instanceof Error?a:Error("Invitation cancellation failed")),!1}},getInvitations:async a=>{try{return[]}catch(a){return this.recordError(a instanceof Error?a:Error("Invitations fetch failed")),[]}},getTeamMembers:async a=>{try{return[]}catch(a){return this.recordError(a instanceof Error?a:Error("Team members fetch failed")),[]}},removeTeamMember:async(a,b,c)=>{try{return this.emit("team:user-removed",{userId:a,clientId:b,removedBy:c}),!0}catch(a){return this.recordError(a instanceof Error?a:Error("Team member removal failed")),!1}},updateTeamMemberRole:async(a,b,c,d)=>{try{return this.emit("user:role-changed",{userId:a,clientId:b,newRole:c,oldRole:"staff"}),!0}catch(a){return this.recordError(a instanceof Error?a:Error("Team member role update failed")),!1}}}}performHealthCheck(){let a=[];this.isActive||a.push({severity:"high",message:"Authentication module is not active",code:"MODULE_INACTIVE",timestamp:new Date,resolved:!1});let b=this.getMetrics();return b.requestCount>0&&b.errorCount/b.requestCount>.1&&a.push({severity:"medium",message:"High authentication error rate detected",code:"HIGH_ERROR_RATE",timestamp:new Date,resolved:!1}),a}updateCustomMetrics(){return{activeUsers:0,sessionsCreated:0,loginAttempts:0,failedLogins:0}}setupEventListeners(){this.logActivity("Authentication event listeners configured")}}let w=null,x=()=>(w||(w=new v),w)}};