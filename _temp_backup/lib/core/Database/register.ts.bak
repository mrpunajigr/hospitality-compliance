/**
 * Database Core Module Registration
 * Registers the Database Core module with the JiGR Suite Module Registry
 * 
 * SAFETY: This only registers the module - no changes to existing code
 */

import { ModuleRegistry } from '@/lib/ModuleRegistry'
import { getDatabaseCore } from './DatabaseCore'

/**
 * Register Database Core module with the registry
 */
export const registerDatabaseCore = async () => {
  try {
    const registry = ModuleRegistry
    const dbModule = getDatabaseCore()
    
    // Register the module instance
    await registry.registerModule(dbModule)
    
    console.log('‚úÖ Database Core module registered successfully')
    return true
    
  } catch (error) {
    console.error('‚ùå Failed to register Database Core module:', error)
    return false
  }
}

/**
 * Initialize Database Core module during app startup
 */
export const initializeDatabaseCore = async (config?: Record<string, any>) => {
  try {
    // Register with module registry
    await registerDatabaseCore()
    
    // Get module instance
    const dbModule = getDatabaseCore()
    
    // Configure if needed
    if (config) {
      await dbModule.configure(config)
    }
    
    // Initialize and activate
    if (!dbModule.isLoaded) {
      await dbModule.initialize()
    }
    
    if (!dbModule.isActive) {
      await dbModule.activate()
    }
    
    console.log('üöÄ Database Core module initialized and active')
    return dbModule
    
  } catch (error) {
    console.error('‚ùå Failed to initialize Database Core module:', error)
    throw error
  }
}

const DatabaseCoreRegistration = { registerDatabaseCore, initializeDatabaseCore }

export default DatabaseCoreRegistration